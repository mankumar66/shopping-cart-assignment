!function(r){var e={};function n(t){if(e[t])return e[t].exports;var o=e[t]={i:t,l:!1,exports:{}};return r[t].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=r,n.c=e,n.d=function(r,e,t){n.o(r,e)||Object.defineProperty(r,e,{enumerable:!0,get:t})},n.r=function(r){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(r,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(r,"__esModule",{value:!0})},n.t=function(r,e){if(1&e&&(r=n(r)),8&e)return r;if(4&e&&"object"==typeof r&&r&&r.__esModule)return r;var t=Object.create(null);if(n.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:r}),2&e&&"string"!=typeof r)for(var o in r)n.d(t,o,function(e){return r[e]}.bind(null,o));return t},n.n=function(r){var e=r&&r.__esModule?function(){return r.default}:function(){return r};return n.d(e,"a",e),e},n.o=function(r,e){return Object.prototype.hasOwnProperty.call(r,e)},n.p="",n(n.s=0)}([function(r,e,n){r.exports=n(1)},function(r,e,n){n(2)(n(3))},function(r,e){r.exports=function(r){function e(r){"undefined"!=typeof console&&(console.error||console.log)("[Script Loader]",r)}try{"undefined"!=typeof execScript&&"undefined"!=typeof attachEvent&&"undefined"==typeof addEventListener?execScript(r):"undefined"!=typeof eval?eval.call(null,r):e("EvalError: No eval function available")}catch(r){e(r)}}},function(r,e){r.exports="const path = require('path');\r\nconst express = require('express');\r\nconst rootDir = require('./utils/path');\r\nconst bodyParser = require('body-parser');\r\nconst expressHbs = require('express-handlebars');\r\n// Will be needed for fetching data from server\r\n/* const request = require('request'); */\r\nvar bannersJSON = require(path.join(rootDir, 'src', 'server', 'banners', 'index.get.json'));\r\nvar categoriesJSOn = require(path.join(rootDir, 'src', 'server', 'categories', 'index.get.json'));\r\n\r\nconst app = express();\r\n\r\napp.engine(\r\n    'hbs',\r\n    expressHbs({\r\n        layoutsDir: 'views/layouts/',\r\n        defaultLayout: 'main',\r\n        extname: 'hbs'\r\n    })\r\n);\r\napp.set('view engine', 'hbs');\r\napp.set('views', 'views');\r\napp.use(bodyParser.urlencoded({ extended: false }));\r\napp.use(express.static(path.join(__dirname, 'src')));\r\n\r\napp.get('/login', (req, res, next) => {\r\n    res.render('login', { loginScript: true })\r\n\r\n});\r\n\r\napp.get('/register', (req, res, next) => {\r\n    res.render('registration', { loginScript: true, registrationScript: true })\r\n});\r\n\r\napp.use('/home', (req, res, next) => {\r\n    // For fetching data from server\r\n    /* request.get(bannerDataUrl, function (err, resp, body) {\r\n        if (err) {\r\n            throw new Error('Error');\r\n        }\r\n        else bannersJSON = resp;\r\n    });\r\n    request.get(categoryDataUrl, function (err, resp, body) {\r\n        if (err) {\r\n            throw new Error('Error');\r\n        }\r\n        else categoriesJSOn = resp;\r\n    }); */\r\n    res.render('home', { homeScript: true, sliderContent: bannersJSON, categoryContent: categoriesJSOn })\r\n});\r\n\r\napp.get('/products', (req, res, next) => {\r\n\r\n    res.render('products', { productScript: true })\r\n});\r\n\r\napp.get('/', (req, res, next) => {\r\n    res.render('home', { homeScript: true, sliderContent: bannersJSON, categoryContent: categoriesJSOn })\r\n});\r\n\r\napp.listen(3000);\r\n\r\n\r\n"}]);